basePath: /api
definitions:
  model.Course:
    properties:
      course_name:
        type: string
      courseID:
        type: integer
      description:
        type: string
      instructor:
        type: string
      students:
        items:
          $ref: '#/definitions/model.Student'
        type: array
    type: object
  model.CourseRequest:
    properties:
      course_name:
        type: string
      description:
        type: string
      instructor:
        type: string
    type: object
  model.DeleteResponse:
    properties:
      message:
        type: string
    type: object
  model.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  model.Student:
    properties:
      courses:
        items:
          $ref: '#/definitions/model.Course'
        type: array
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      studentID:
        type: integer
    type: object
  model.StudentRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
    type: object
  model.UpdateCourseRequest:
    properties:
      courseIDs:
        items:
          type: integer
        type: array
    type: object
host: localhost:8001
info:
  contact: {}
  description: API for managing students and courses.
  title: Student Management API
  version: "1"
paths:
  /courses:
    get:
      consumes:
      - application/json
      description: Get a list of all courses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Course'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: GetAllCourses
    post:
      consumes:
      - application/json
      description: Create a course with the given details
      parameters:
      - description: Course details
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.CourseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Course'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: CreateCourse
  /courses/{courseId}:
    get:
      description: Get the details of a course with the given ID
      parameters:
      - description: Course ID
        in: path
        name: courseId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Course'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: GetCourse
  /courses/{courseId}/students:
    get:
      description: Get a list of all students taken a course
      parameters:
      - description: Course ID
        in: path
        name: courseId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Student'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: ListStudentTakenACourse
  /students:
    get:
      consumes:
      - application/json
      description: Get a list of all students
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Student'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: GetAllStudents
    post:
      consumes:
      - application/json
      description: Create a student with the given details
      parameters:
      - description: Student details
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.StudentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Student'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: CreateStudent
  /students/{studentId}:
    delete:
      consumes:
      - application/json
      description: Delete a student with the given ID
      parameters:
      - description: Student ID
        in: path
        name: studentId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DeleteResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: DeleteStudent
    get:
      description: Get the details of a student with the given ID
      parameters:
      - description: Student ID
        in: path
        name: studentId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Student'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: GetStudent
    put:
      consumes:
      - application/json
      description: Update the details of a student with the given ID
      parameters:
      - description: Student ID
        in: path
        name: studentId
        required: true
        type: string
      - description: Student details
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.StudentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Student'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: UpdateStudent
  /students/{studentId}/courses:
    get:
      description: Get a list of all courses taken by student
      parameters:
      - description: Student ID
        in: path
        name: studentId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Course'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: ListCoursesTakenByStudent
    put:
      consumes:
      - application/json
      description: Update a student with the given ID courses
      parameters:
      - description: Student ID
        in: path
        name: studentId
        required: true
        type: string
      - description: Courses IDs
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.UpdateCourseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Student'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: UpdateStudentCourses
schemes:
- http
swagger: "2.0"
